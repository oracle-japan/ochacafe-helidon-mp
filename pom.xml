<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.helidon.applications</groupId>
        <artifactId>helidon-mp</artifactId>
        <version>3.0.2</version>
        <relativePath />
    </parent>
    <groupId>me.opc-helidon</groupId>
    <artifactId>helidon-demo-mp</artifactId>
    <version>3.0.2.1</version>
    <name>${project.artifactId}</name>

    <properties>
        <grpc.version>1.45.1</grpc.version>
        <apm.tracer.version>[1.8.3326,)</apm.tracer.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.helidon.microprofile.bundles</groupId>
            <artifactId>helidon-microprofile-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.metrics</groupId>
            <artifactId>microprofile-metrics-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.metrics</groupId>
            <artifactId>helidon-microprofile-metrics</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.health</groupId>
            <artifactId>helidon-microprofile-health</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile</groupId>
            <artifactId>helidon-microprofile-security</artifactId>
        </dependency>

        <dependency>
            <groupId>jakarta.json.bind</groupId>
            <artifactId>jakarta.json.bind-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-binding</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.common</groupId>
            <artifactId>helidon-common</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
        </dependency>


        <dependency>
            <groupId>io.helidon.integrations.cdi</groupId>
            <artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.transaction</groupId>
            <artifactId>jakarta.transaction-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.integrations.cdi</groupId>
            <artifactId>helidon-integrations-cdi-jta-weld</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.integrations.cdi</groupId>
            <artifactId>helidon-integrations-cdi-jpa</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.helidon.integrations.cdi</groupId>
            <artifactId>helidon-integrations-cdi-eclipselink</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.el</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jandex</artifactId>
            <!-- scope>runtime</scope -->
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>jakarta.activation</groupId>
            <artifactId>jakarta.activation-api</artifactId>
            <scope>runtime</scope>
        </dependency>


        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.tests</groupId>
            <artifactId>helidon-microprofile-tests-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>


        <!-- support Health Check -->
        <dependency>
            <groupId>io.helidon.health</groupId>
            <artifactId>helidon-health-checks</artifactId>
        </dependency>

        <!-- support Fault Tolerance -->
        <dependency>
            <groupId>io.helidon.microprofile</groupId>
            <artifactId>helidon-microprofile-fault-tolerance</artifactId>
        </dependency>

        <!-- support Rest Client -->
        <dependency>
            <groupId>io.helidon.microprofile.rest-client</groupId>
            <artifactId>helidon-microprofile-rest-client</artifactId>
        </dependency>

        <!-- suport Open Api-->
        <dependency>
            <groupId>org.eclipse.microprofile.openapi</groupId>
            <artifactId>microprofile-openapi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.openapi</groupId>
            <artifactId>helidon-microprofile-openapi</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- support tracing, see profiles for tracing options -->
        <dependency>
            <groupId>io.helidon.tracing</groupId>
            <artifactId>helidon-tracing-opentracing</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.tracing</groupId>
            <artifactId>helidon-microprofile-tracing</artifactId>
        </dependency>

        <!-- support gRPC-->
        <dependency>
            <groupId>io.helidon.microprofile.grpc</groupId>
            <artifactId>helidon-microprofile-grpc-server</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.grpc</groupId>
            <artifactId>helidon-microprofile-grpc-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>${grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>${grpc.version}</version>
        </dependency>

        <!-- support Reactive Messaging / Mock Connector -->
        <dependency>
            <groupId>io.helidon.microprofile.messaging</groupId>
            <artifactId>helidon-microprofile-messaging</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.messaging.mock</groupId>
            <artifactId>helidon-messaging-mock</artifactId>
        </dependency>

        <!-- support Mapped Diagnostic Context -->
        <dependency>
            <groupId>io.helidon.logging</groupId>
            <artifactId>helidon-logging-jul</artifactId>
        </dependency>

        <!-- support GraphQL -->
        <dependency>
            <groupId>io.helidon.microprofile.graphql</groupId>
            <artifactId>helidon-microprofile-graphql-server</artifactId>
        </dependency>

        <!-- support scheduling -->
        <dependency>
            <groupId>io.helidon.microprofile.scheduling</groupId>
            <artifactId>helidon-microprofile-scheduling</artifactId>
        </dependency>

        <!-- support MicroProfile LRA-->
        <dependency>
            <groupId>io.helidon.microprofile.lra</groupId>
            <artifactId>helidon-microprofile-lra</artifactId>
        </dependency>
        <!-- Support for Narayana coordinator -->
        <dependency>
            <groupId>io.helidon.lra</groupId>
            <artifactId>helidon-lra-coordinator-narayana-client</artifactId>
        </dependency>

        <!-- cowweb -->
        <dependency>
            <groupId>com.github.ricksbrown</groupId>
            <artifactId>cowsay</artifactId>
            <version>1.1.0</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-lang3</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.plexus</groupId>
                    <artifactId>plexus-classworlds</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.plexus</groupId>
                    <artifactId>plexus-utils</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-libs</id>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.helidon.build-tools</groupId>
                <artifactId>helidon-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>third-party-license-report</id>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jboss.jandex</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-index</id>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <profiles>

        <!-- generate protobuf classes => mvn -P protoc generate-sources -->
        <profile>
            <id>protoc</id>
            <dependencies>
                <dependency>
                    <groupId>io.grpc</groupId>
                    <artifactId>grpc-protobuf</artifactId>
                    <version>${grpc.version}</version>
                </dependency>
                <dependency>
                    <groupId>io.grpc</groupId>
                    <artifactId>grpc-stub</artifactId>
                    <version>${grpc.version}</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <!--  compile .proto -->
                    <plugin>
                        <groupId>org.xolstice.maven.plugins</groupId>
                        <artifactId>protobuf-maven-plugin</artifactId>
                        <version>0.6.1</version>
                        <configuration>
                            <protocArtifact>com.google.protobuf:protoc:3.15.2:exe:${os.detected.classifier}</protocArtifact>
                            <pluginId>grpc-java</pluginId>
                            <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>compile</goal>
                                    <goal>compile-custom</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- copy generated sources -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <id>copy-template</id>
                                <phase>initialize</phase>
                                <configuration>
                                    <target>
                                        <echo message="copy protobuf generated files to src" />
                                        <delete dir="src/main/java/oracle/demo/grpc/protobuf/helloworld" verbose="true" />
                                        <copy todir="src/main/java" overwrite="no">
                                            <fileset dir="target/generated-sources/protobuf/java" />
                                            <fileset dir="target/generated-sources/protobuf/grpc-java" />
                                        </copy>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>


        <!-- jdbc option dependencies-->
        <profile>
            <id>db-h2</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>db-oracle</id>
            <properties>
                <oracle.jdbc.version>21.7.0.0</oracle.jdbc.version>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.oracle.database.jdbc</groupId>
                    <artifactId>ojdbc11-production</artifactId>
                    <version>${oracle.jdbc.version}</version>
                    <type>pom</type>
                </dependency>
            </dependencies>
        </profile>

        <!-- tracing option dependencies-->
        <profile>
            <!-- jaeger -->
            <id>tracing-jaeger</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>io.helidon.tracing</groupId>
                    <artifactId>helidon-tracing-jaeger</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <!-- zipkin -->
            <id>tracing-zipkin</id>
            <dependencies>
                <dependency>
                    <groupId>io.helidon.tracing</groupId>
                    <artifactId>helidon-tracing-zipkin</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <!-- OCI Application Performance Monitoring -->
            <id>tracing-oci-apm</id>
            <dependencies>
                <!--
                <dependency>
                    <groupId>com.oracle.apm.agent.java</groupId>
                    <artifactId>apm-java-agent-tracer</artifactId>
                    <version>${apm.tracer.version}</version>
                </dependency>
                -->
                <dependency>
                    <groupId>com.oracle.apm.agent.java</groupId>
                    <artifactId>apm-java-agent-helidon3</artifactId>
                    <version>${apm.tracer.version}</version>
                </dependency>
            </dependencies>
            <repositories>
                <repository>
                    <id>oci</id>
                    <name>OCI Object Store</name>
                    <url>https://objectstorage.us-ashburn-1.oraclecloud.com/n/idhph4hmky92/b/prod-agent-binaries/o</url>
                </repository>
            </repositories>
        </profile>

        <!-- Connectors -->
        <profile>
            <!-- Kafka Connector -->
            <id>kafka</id>
            <dependencies>
                <dependency>
                    <groupId>io.helidon.messaging.kafka</groupId>
                    <artifactId>helidon-messaging-kafka</artifactId>
                </dependency>
            </dependencies>
        </profile>

        <!-- OpenAPI Swagger UI -->
        <profile>
            <id>openapi-ui</id>
            <dependencies>
                <dependency>
                    <groupId>org.microprofile-ext.openapi-ext</groupId>
                    <artifactId>openapi-ui</artifactId>
                    <version>2.0.0</version>
                </dependency>
            </dependencies>
        </profile>

    </profiles>

</project>